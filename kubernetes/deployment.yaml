apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-dashboard-config
data:
  K8S_API_URL: "http://kubernetes.default.svc"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-dashboard
  labels:
    app: k8s-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-dashboard
  template:
    metadata:
      labels:
        app: k8s-dashboard
    spec:
      serviceAccountName: k8s-dashboard
      containers:
      - name: k8s-dashboard
        image: your-registry/k8s-dashboard:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: K8S_API_URL
          valueFrom:
            configMapKeyRef:
              name: k8s-dashboard-config
              key: K8S_API_URL
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.1"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-dashboard
  labels:
    app: k8s-dashboard
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: k8s-dashboard
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-dashboard-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "services", "namespaces", "configmaps", "serviceaccounts"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-dashboard-binding
subjects:
- kind: ServiceAccount
  name: k8s-dashboard
  namespace: default
roleRef:
  kind: ClusterRole
  name: k8s-dashboard-role
  apiGroup: rbac.authorization.k8s.io 